# -*- coding: utf-8 -*-
def impactarProducto():
#    try:
    print 'llegó'
    print request.vars.idProducto
    print request.vars.cantidad
    print request.vars.categoria
    print request.vars.precio
    producto = request.vars.idProducto
    cantidad = request.vars.cantidad
    categoria = request.vars.categoria
    precio = request.vars.precio
    if auth.user:
        if tieneVentaVigente(auth.user.id):
            #do update
            print 'tiene'
            resultado = db.detalleVenta.insert(idVenta = resultado, idProducto = producto, cantidad = cantidad, precioUnitario = precio)
            if resultado != 0:
                print 'insertó'
                response.flash = 'Artículo agregado al carrito de compra.'
            redirect(URL('producto', 'productosListados/%s'%categoria ))
        else:
            #do inserts venta- detalle
            print 'no tiene venta vigente'
            resultado = db.venta.insert(idCliente = auth.user.id, estado = 'Pendiente')
            print resultado
            if resultado != 0:
                resultado = db.detalleVenta.insert(idVenta = resultado, idProducto = producto, cantidad = cantidad, precioUnitario = precio)
                if resultado != 0:
                    print 'insertó'
                    response.flash = 'Artículo agregado al carrito de compra.'
                else:
                    response.flash = 'Falló al  agregarlo.'

                redirect(URL('producto', 'productosListados/%s'%categoria ))
            else:
                print 'fallo'
                response.flash = 'Intentó realizar una acción que requiere que se encuentre logueado.'
                redirect(URL('producto', 'productosListados/%s'%categoria ))


    else:
        print 'Fallo'
        response.flash = 'Intentó realizar una acción que requiere que se encuentre logueado.'
        redirect(URL('producto', 'productosListados/%s'%categoria ))


        #session.flash = 'Paso'

        #redirect(URL('producto', 'productosListados/%s'%categoria ))
#    except Exception as blumba:
#        print blumba
    return locals()
